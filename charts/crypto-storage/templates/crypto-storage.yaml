apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.name }}
stringData:
  CRYPTO_KEY_VALUE: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.name "key" "CRYPTO_KEY_VALUE" "providedValues" (list "") "length" 16 "context" $) }}
  CRYPTO_KEY_PROVIDER: "secret"
  CRYPTO_KEY_CIPHER: "aes-xts-plain64"
  CRYPTO_KEY_HASH: "sha256"
  CRYPTO_KEY_SIZE: "256"
  CRYPTO_PBKDF: "argon2i"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Values.name }}
  {{- if .Values.default }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  # nodeSelector: "{{ .Values.cluster_fqn }}" # TODO: Uncomment once #30 is solved.
  numberOfReplicas: "2"
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  fromBackup: ""
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: {{ .Values.name }}
  csi.storage.k8s.io/provisioner-secret-namespace: {{ .Release.Namespace }}
  csi.storage.k8s.io/node-publish-secret-name: {{ .Values.name }}
  csi.storage.k8s.io/node-publish-secret-namespace: {{ .Release.Namespace }}
  csi.storage.k8s.io/node-stage-secret-name: {{ .Values.name }}
  csi.storage.k8s.io/node-stage-secret-namespace: {{ .Release.Namespace }}
