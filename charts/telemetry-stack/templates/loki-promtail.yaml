apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: grafana
spec:
  interval: 1h
  url: https://grafana.github.io/helm-charts
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-root
type: Opaque
data:
  rootUser: {{ "root" | b64enc }}
  rootPassword: {{ include "common.secrets.passwords.manage" (dict "secret" "minio-root" "key" "rootPassword" "providedValues" (list "") "length" 16 "context" $) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-loki
type: Opaque
data:
  id: {{ "loki" | b64enc }}
  secret: {{ include "common.secrets.passwords.manage" (dict "secret" "minio-loki" "key" "secret" "providedValues" (list "") "length" 16 "context" $) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: loki-basicauth
type: Opaque
data:
  name: {{ "cluster" | b64enc }}
  password: {{ include "common.secrets.passwords.manage" (dict "secret" "loki-basicauth" "key" "password" "providedValues" (list "") "length" 16 "context" $) }}
---
{{- if not .Values.bootstrap }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
spec:
  interval: 1h
  chart:
    spec:
      chart: loki
      version: "^5.9.2"
      sourceRef:
        kind: HelmRepository
        name: grafana
  timeout: '15m0s' # Account for slow performance of cluster on first setup.
  valuesFrom:
    - kind: Secret
      name: minio-loki
      valuesKey: secret
      targetPath: storage.s3.secretAccessKey
    - kind: Secret
      name: loki-basicauth
      valuesKey: password
      targetPath: gateway.basicAuth.password
  values:
    storage:
      type: s3
      s3:
        endpoint: http://loki-minio:9000
        accessKeyId: loki
        # secretAccessKey: "" # injected, see above
    read:
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 3
        targetCPUUtilizationPercentage: 65
        targetMemoryUtilizationPercentage: 65
    write:
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 3
        targetCPUUtilizationPercentage: 65
        targetMemoryUtilizationPercentage: 65
    tableManager:
      resources:
        cpu: 50m
        memory: 64Mi
    backend:
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 3
        targetCPUUtilizationPercentage: 65
        targetMemoryUtilizationPercentage: 65
    gateway:
      basicAuth:
        enabled: true
        username: cluster
        # password: "" # injected, see above
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 3
        targetCPUUtilizationPercentage: 65
        targetMemoryUtilizationPercentage: 65
    loki:
      compactor:
        retention_enabled: true
      limits_config:
        retention_period: 168h
    minio:
      enabled: true
      existingSecret: minio-root
      users:
        - accessKey: loki
          existingSecret: minio-loki
          existingSecretKey: secret
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: promtail
spec:
  interval: 1h
  chart:
    spec:
      chart: promtail
      version: "^6.11.9"
      sourceRef:
        kind: HelmRepository
        name: grafana
  timeout: '15m0s' # Account for slow performance of cluster on first setup.
  valuesFrom:
    - kind: Secret
      name: loki-basicauth
      valuesKey: password
      targetPath: config.clients[0].basic_auth.password
  values:
    config:
      clients:
        - url: http://loki-gateway/loki/api/v1/push
          basic_auth:
            username: cluster
            # password: "" # injected, see above
      snippets:
        extraScrapeConfigs: |
          # Add an additional scrape config for syslog
          - job_name: journal
            journal:
              path: /var/log/journal
              max_age: 12h
              labels:
                job: systemd-journal
            relabel_configs:
              - source_labels:
                  - __journal__hostname
                target_label: hostname

              # example label values: kubelet.service, containerd.service
              - source_labels:
                  - __journal__systemd_unit
                target_label: unit

              # example label values: debug, notice, info, warning, error
              - source_labels:
                  - __journal_priority_keyword
                target_label: level
    # Mount journal directory and machine-id file into promtail pods
    extraVolumes:
      - name: journal
        hostPath:
          path: /var/log/journal
      - name: machine-id
        hostPath:
          path: /etc/machine-id
    extraVolumeMounts:
      - name: journal
        mountPath: /var/log/journal
        readOnly: true
      - name: machine-id
        mountPath: /etc/machine-id
        readOnly: true
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
{{- end }}
