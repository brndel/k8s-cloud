apiVersion: v1
kind: Secret
metadata:
  name: idp-cert
type: kubernetes.io/tls
data:
  {{- $idp_cert := dict "tls.crt" "" "tls.key" "" }}

  {{- if not (include "common.secrets.exists" (dict "secret" "idp-cert" "context" $)) }}
  {{- $gen_cert := genSelfSignedCert .Values.domain nil nil 3650 -}}
  {{- $_ := set $idp_cert "tls.crt" ($gen_cert.Cert | replace "\n" "" | trimPrefix "-----BEGIN CERTIFICATE-----" | trimSuffix "-----END CERTIFICATE-----" | b64enc) }}
  {{- $_ := set $idp_cert "tls.key" ($gen_cert.Key | replace "\n" "" | trimPrefix "-----BEGIN RSA PRIVATE KEY-----" | trimSuffix "-----END RSA PRIVATE KEY-----" | b64enc) }}
  {{- else -}}
  {{- $idp_cert = (lookup "v1" "Secret" .Release.Namespace "idp-cert").data }}
  {{- end }}

  tls.crt: {{ index $idp_cert "tls.crt" }}
  tls.key: {{ index $idp_cert "tls.key" }}
---
apiVersion: v1
kind: Secret
metadata:
  name: idp-admin
type: Opaque
data:
  admin-password: {{ include "common.secrets.passwords.manage" (dict "secret" "idp-admin" "key" "admin-password" "providedValues" (list "") "length" 16 "context" $) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: authproxy-oidc-client
type: Opaque
data:
  secret: {{ include "common.secrets.passwords.manage" (dict "secret" "authproxy-oidc-client" "key" "secret" "providedValues" (list "") "length" 16 "context" $) }}
---
{{- range $client := .Values.clients.oidc }}
apiVersion: v1
kind: Secret
metadata:
  {{- $client_secret := (printf "oidc-client.%s" $client.id) }}
  name: {{ $client_secret }}
type: Opaque
data:
  secret: {{ include "common.secrets.passwords.manage" (dict "secret" $client_secret "key" "secret" "providedValues" (list "") "length" 16 "context" $) }}
---
{{- end }}
{{- range $client := .Values.clients.saml }}
apiVersion: v1
kind: Secret
metadata:
  {{- $client_secret := (printf "saml-cert.%s" $client.id) }}
  name: {{ $client_secret }}
type: kubernetes.io/tls
data:
  {{- $cert := dict "tls.crt" "" "tls.key" "" -}}

  {{- if not (include "common.secrets.exists" (dict "secret" $client_secret "context" $)) -}}
  {{- $gen_cert := genSelfSignedCert .Values.domain nil nil 3650 -}}
  {{- set $cert "tls.crt" ($gen_cert.Cert | replace "\n" "" | trimPrefix "-----BEGIN CERTIFICATE-----" | trimSuffix "-----END CERTIFICATE-----" | b64enc) -}}
  {{- set $cert "tls.key" ($gen_cert.Key | replace "\n" "" | trimPrefix "-----BEGIN RSA PRIVATE KEY-----" | trimSuffix "-----END RSA PRIVATE KEY-----" | b64enc) -}}
  {{- else -}}
  {{- $cert = (lookup "v1" "Secret" .Release.Namespace $client_secret).data -}}
  {{- end -}}

  tls.crt: {{ get $cert "tls.crt" }}
  tls.key: {{ get $cert "tls.key" }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: smtp-creds
type: Opaque
data:
  {{- $passRef := .Values.smtp.password_secret }}
  password: {{ get ((lookup "v1" "Secret" (default .Release.Namespace $passRef.namespace) $passRef.name).data) $passRef.key }}
