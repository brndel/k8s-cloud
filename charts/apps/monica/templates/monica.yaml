{{- if .Values.s3.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: monica-s3
type: Opaque
data:
  {{- $secretRef := .Values.s3.access_key_secret }}
  secret: {{ get ((lookup "v1" "Secret" (default .Release.Namespace $secretRef.namespace) $secretRef.name).data) $secretRef.key }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: monica-mariadb
type: Opaque
data:
  mariadb-password: {{ include "common.secrets.passwords.manage" (dict "secret" "monica-mariadb" "key" "mariadb-password" "providedValues" (list "") "context" $) }}
  mariadb-root-password: {{ include "common.secrets.passwords.manage" (dict "secret" "monica-mariadb" "key" "mariadb-root-password" "providedValues" (list "") "context" $) }}
  mariadb-replication-password: {{ include "common.secrets.passwords.manage" (dict "secret" "monica-mariadb" "key" "mariadb-replication-password" "providedValues" (list "") "context" $) }}
  mariadb-username: {{ "monica" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: monica
type: Opaque
data:
  app-key: {{ include "common.secrets.passwords.manage" (dict "secret" "monica" "key" "app-key" "providedValues" (list "") "length" 32 "context" $) }}
  hash-salt: {{ include "common.secrets.passwords.manage" (dict "secret" "monica" "key" "hash-salt" "providedValues" (list "") "length" 20 "context" $) }}
  {{- $passRef := .Values.smtp.password_secret }}
  smtp-password: {{ get ((lookup "v1" "Secret" (default .Release.Namespace $passRef.namespace) $passRef.name).data) $passRef.key }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: monica-data
  annotations:
    helm.sh/resource-policy: "keep"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
  storageClassName: ha
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: monica-mariadb
spec:
  interval: 1h
  chart:
    spec:
      chart: mariadb
      version: '^19.0.4'
      sourceRef:
        kind: HelmRepository
        name: bitnami
  values:
    auth:
      existingSecret: monica-mariadb
      database: monica
    primary:
      persistence:
        enabled: true
        size: 2Gi
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: monica
spec:
  type: ClusterIP
  selector:
    app: monica
  ports:
    - port: 80
      targetPort: http
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monica
  labels:
    app: monica
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: monica
  template:
    metadata:
      labels:
        app: monica
    spec:
      hostname: monica
      containers:
        - name: monica
          image: monica
          imagePullPolicy: Always
          env:
            - name: APP_ENV
              value: production
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: monica
                  key: app-key
            - name: HASH_SALT
              valueFrom:
                secretKeyRef:
                  name: monica
                  key: hash-salt
            - name: APP_URL
              value: {{ printf "https://%s" .Values.host }}
            - name: DB_HOST
              value: monica-mariadb
            - name: DB_DATABASE
              value: monica
            - name: DB_USERNAME
              value: monica
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: monica-mariadb
                  key: mariadb-password
            - name: MAIL_HOST
              value: {{ .Values.smtp.host }}
            - name: MAIL_PORT
              value: {{ .Values.smtp.port }}
            - name: MAIL_USERNAME
              value: {{ .Values.smtp.user }}
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: monica
                  key: smtp-password
            - name: MAIL_ENCRYPTION
              value: ssl
            - name: MAIL_FROM_ADDRESS
              value: {{ .Values.smtp.from_address }}
            - name: FILESYSTEM_DISK
              value: {{ .Values.s3.enabled | ternary "s3" "public" }}
            {{- if .Values.s3.enabled }}
            - name: AWS_KEY
              value: {{ .Values.s3.access_key_id }}
            - name: AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: monica-s3
                  key: secret
            - name: AWS_REGION
              value: {{ .Values.s3.region }}
            - name: AWS_BUCKET
              value: {{ .Values.s3.bucket }}
            - name: AWS_SERVER
              value: {{ .Values.s3.endpoint }}
            {{- end }}
            {{- if .Values.geolocation.enabled }}
            - name: ENABLE_GEOLOCATION
              value: "true"
            - name: LOCATION_IQ_API_KEY
              value: {{ .Values.geolocation.api_key }}
            {{- end }}
            {{- if .Values.weather.enabled }}
            - name: ENABLE_WEATHER
              value: "true"
            - name: WEATHERAPI_KEY
              value: {{ .Values.weather.api_key }}
            {{- end }}
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 30
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              memory: 512Mi # estimated, not measured
              cpu: 100m # estimated, not measured
          volumeMounts:
            - name: data
              mountPath: "/var/www/html/storage"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: monica-data
{{- if .Values.ingress }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monica
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 1G
spec:
  tls:
    - hosts:
        - {{ .Values.host }}
      secretName: monica-cert
  rules:
    - host: {{ .Values.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: monica
                port:
                  name: http
{{- end }}
{{- if .Values.snapshots.enabled }}
---
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshot
metadata:
  name: {{ printf "monica-data-%s" (now | date "20060102150405") }}
  annotations:
    "helm.sh/hook": pre-upgrade
spec:
  source:
    persistentVolumeClaimName: monica-data
  {{- if .Values.snapshots.class_name }}
  volumeSnapshotClassName: {{ .Values.snapshots.class_name }}
  {{- end }}
{{- end }}
