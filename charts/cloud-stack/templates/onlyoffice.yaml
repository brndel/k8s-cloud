apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bitnami
spec:
  interval: 1h
  url: https://charts.bitnami.com/bitnami
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: onlyoffice
spec:
  interval: 1h
  url: https://download.onlyoffice.com/charts/stable
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: onlyoffice-rabbitmq
spec:
  interval: 1h
  chart:
    spec:
      chart: rabbitmq
      version: "12.0.13"
      sourceRef:
        kind: HelmRepository
        name: bitnami
  timeout: 10m0s
  values:
    nodeSelector:
      {{- if not (eq .Values.zone "") }}
      topology.kubernetes.io/zone: {{ .Values.zone }}
      {{- else }}
      backbone: "1"
      {{- end }}
    fullnameOverride: onlyoffice-rabbitmq
    auth:
      username: onlyoffice
      existingPasswordSecret: onlyoffice-rabbitmq
      existingErlangSecret: onlyoffice-rabbitmq
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    persistence:
      size: 2Gi
      storageClass: local
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: onlyoffice-redis
spec:
  interval: 1h
  chart:
    spec:
      chart: redis
      version: "^17"
      sourceRef:
        kind: HelmRepository
        name: bitnami
  timeout: 10m0s
  values:
    fullnameOverride: onlyoffice-redis
    architecture: standalone
    auth:
      existingSecret: onlyoffice-redis
      existingSecretPasswordKey: password
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    master:
      nodeSelector:
        {{- if not (eq .Values.zone "") }}
        topology.kubernetes.io/zone: {{ .Values.zone }}
        {{- else }}
        backbone: "1"
        {{- end }}
      persistence:
        size: 2Gi
        storageClass: local
      resources:
        requests:
          memory: 128Mi
          cpu: 100m
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: onlyoffice-postgres
spec:
  interval: 1h
  chart:
    spec:
      chart: postgresql
      version: "^12"
      sourceRef:
        kind: HelmRepository
        name: bitnami
  timeout: 10m0s
  values:
    fullnameOverride: onlyoffice-postgres
    auth:
      database: onlyoffice
      username: onlyoffice
      existingSecret: onlyoffice-postgres
    global:
      storageClass: {{ (eq .Values.zone "") | ternary "backbone" (printf "zone-%s" .Values.zone) }}
    primary:
      nodeSelector:
        {{- if not (eq .Values.zone "") }}
        topology.kubernetes.io/zone: {{ .Values.zone }}
        {{- else }}
        backbone: "1"
        {{- end }}
      persistence:
        size: 4Gi
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: onlyoffice
spec:
  interval: 1h
  chart:
    spec:
      chart: docs
      version: "^3.3.0"
      sourceRef:
        kind: HelmRepository
        name: onlyoffice
  timeout: 30m0s # Onlyoffice needs a while with all the install/upgrade jobs.
  dependsOn:
    - name: onlyoffice-rabbitmq
    - name: onlyoffice-redis
    - name: onlyoffice-postgres
  values:
    nodeSelector:
      {{- if not (eq .Values.zone "") }}
      topology.kubernetes.io/zone: {{ .Values.zone }}
      {{- else }}
      backbone: "1"
      {{- end }}
    docservice:
      image:
        repository: onlyoffice/docs-docservice
      replicas: 1
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      resources:
        requests:
          memory: 128Mi
          cpu: 50m
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 8
        targetCPU:
          utilizationPercentage: 65
        targetMemory:
          utilizationPercentage: 65
    proxy:
      image:
        repository: onlyoffice/docs-proxy
    converter:
      image:
        repository: onlyoffice/docs-converter
      replicas: 1
      resources:
        requests:
          memory: 128Mi
          cpu: 50m
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 8
        targetCPU:
          utilizationPercentage: 65
        targetMemory:
          utilizationPercentage: 65
    jwt:
      existingSecret: onlyofficejwt
    connections:
      dbType: postgres
      dbHost: onlyoffice-postgres
      dbName: onlyoffice
      dbUser: onlyoffice
      dbSecretKeyName: password
      dbExistingSecret: onlyoffice-postgres
      redisHost: onlyoffice-redis-headless
      redisSecretKeyName: password
      redisExistingSecret: onlyoffice-redis
      amqpType: rabbitmq
      amqpHost: onlyoffice-rabbitmq
      amqpUser: onlyoffice
      amqpSecretKeyName: rabbitmq-password
      amqpExistingSecret: onlyoffice-rabbitmq
    persistence:
      storageClass: {{ (eq .Values.zone "") | ternary "backbone" (printf "zone-%s" .Values.zone) }}
      size: 4Gi
    ingress:
      enabled: {{ .Values.ingress }}
      annotations:
        kubernetes.io/tls-acme: "'true'"
      host: {{ .Values.hosts.onlyoffice }}
      ssl:
        enabled: true
        secret: onlyoffice-tls
