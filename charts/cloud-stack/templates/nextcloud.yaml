apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: nextcloud
spec:
  interval: 1h
  url: https://nextcloud.github.io/helm/
---
# # TODO: #53 Re-enable nextcloud autoconfig after rigorous testing
# kind: ConfigMap
# apiVersion: v1
# metadata:
#   name: nextcloud-autoconfig
# data:
#   setup.sh: |
#     #!/bin/bash

#     if [ -f ~/autoconf-running ]
#     then
#       echo "Autoconfig script is already running. Exiting."
#       exit 0
#     fi

#     touch ~/autoconf-running
#     trap 'rm ~/autoconf-running' EXIT

#     until $(curl --output /dev/null --silent --head --fail -H "Host: {{ .Values.hosts.nextcloud }}" http://localhost:80/status.php); do
#       echo 'waiting for nextcloud to start...'
#       sleep 5
#     done
#     echo 'nextcloud is up.'

#     echo 'installing apps...'
#     for APP in $(cat apps.txt); do
#       if ! [[ -d /var/www/html/custom_apps/$APP || -d /var/www/html/apps/$APP ]] ; then
#         echo "installing $APP"
#         runuser --user www-data -- /var/www/html/occ app:install $APP
#       # elif ! [ "$(runuser --user www-data -- /var/www/html/occ config:app:get $APP enabled)" = "yes" ]; then
#       #   echo "enabling $APP"
#       #   runuser --user www-data -- /var/www/html/occ app:enable $APP
#       fi
#     done
#     echo 'installing apps... done'

#     echo 'loading config.json...'
#     envsubst < config.json > config.subst.json
#     cp config.subst.json /var/www/html/config.json
#     runuser --user www-data -- /var/www/html/occ config:import config.json
#     rm -f config.subst.json
#     echo 'loading config.json... done'

#     echo 'nextcloud all set up.'
#   apps.txt: | 
#     oidc_login
#     onlyoffice
#   # Use oidc client secret as jwt secret. Is as good as any...
#   config.json: |
#     {
#       "system": {},
#       "apps": {
#         "onlyoffice": {
#           "DocumentServerUrl": {{ printf "https://%s" .Values.hosts.onlyoffice | quote }},
#           "jwt_secret": $OO_JWT_SECRET
#         },
#         "files": {
#           "default_quota": "1 GB"
#         }
#       }
#     }
# ---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 1h
  chart:
    spec:
      chart: nextcloud
      version: '^3.5'
      sourceRef:
        kind: HelmRepository
        name: nextcloud
  timeout: 15m0s # Increase timeout to be sure.
  values:
    replicaCount: 2
    ingress:
      enabled: true
      tls:
        - secretName: nextcloud-tls
          hosts:
            - {{ .Values.hosts.nextcloud }}
      annotations:
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
    nextcloud:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      host: {{ .Values.hosts.nextcloud }}
      existingSecret:
        enabled: true
        secretName: nextcloud
      mail:
        enabled: true
        fromAddress: {{ index (.Values.smtp.from_address | splitList "@") 0 }}
        domain: {{ index (.Values.smtp.from_address | splitList "@") 1 }}
        smtp:
          host: {{ .Values.smtp.host }}
          port: {{ .Values.smtp.port }}
          secure: ssl
      extraEnv:
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oidc-client
              key: secret
        - name: OO_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: onlyofficejwt
              key: JWT_SECRET
        - name: S3_SECRET
          valueFrom:
            secretKeyRef:
              name: s3-access-key
              key: secret
      configs:
        oidc.config.php: | 
          <?php
          $CONFIG = array (
            // See here for explanation: https://github.com/pulsejet/nextcloud-oidc-login#config
            'allow_user_to_change_display_name' => false,
            'lost_password_link' => 'disabled',
            'oidc_login_provider_url' => {{ .Values.oidc_client.idp_url | quote }},
            'oidc_login_client_id' => {{ .Values.oidc_client.id | quote }},
            'oidc_login_client_secret' => getenv('OIDC_CLIENT_SECRET'),
            'oidc_login_auto_redirect' => true,
            'oidc_login_logout_url' => {{ printf "https://%s" .Values.hosts.nextcloud | quote }},
            'oidc_login_end_session_redirect' => false,
            'oidc_login_button_text' => {{ printf "%s Login / Signup" .Values.org.name | quote }},
            'oidc_login_hide_password_form' => false,
            'oidc_login_use_id_token' => false,
            'oidc_login_attributes' => array (
                'id' => 'sub',
                'name' => 'name',
                'mail' => 'email',
                'quota' => 'nextcloudQuota',
                'home' => 'homeDirectory',
                'groups' => 'groups',
                'photoURL' => 'picture',
                'is_admin' => 'is_admin',
            ),
            'oidc_login_use_external_storage' => false,
            'oidc_login_scope' => 'openid profile groups email is_admin',
            'oidc_login_proxy_ldap' => true,
            'oidc_login_disable_registration' => false,
            'oidc_login_redir_fallback' => false,
            'oidc_login_tls_verify' => true,
            'oidc_create_groups' => true
          );
          ?>
        locale.config.php: | 
          <?php
          $CONFIG = array (
            'default_locale' => {{ .Values.org.default_locale | quote }},
          );
          ?>
        proxy.config.php: | 
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
          );
          ?>
        s3.config.php: |-
          <?php
          $CONFIG = array (
            'objectstore' => array(
              'class' => '\\OC\\Files\\ObjectStore\\S3',
              'arguments' => array(
                'bucket'     => {{ .Values.s3.bucket | quote }},
                'hostname' => {{ .Values.s3.endpoint | quote }},
                'autocreate' => true,
                'key'        => {{ .Values.s3.access_key_id | quote }},
                'secret'     => getenv('S3_SECRET'),
                'region'     => {{ .Values.s3.region | quote }},
                'use_ssl'    => true
              )
            )
          );
          ?>
        mail.config.php: | 
          <?php
          $CONFIG = array (
            'mail_smtptimeout' => 30,
          );
          ?>
      # extraVolumes:
      #   - name: autoconfig
      #     configMap:
      #       name: nextcloud-autoconfig
      # extraVolumeMounts:
      #   - name: autoconfig
      #     mountPath: /autoconfig
      #     readOnly: true
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 30
    readinessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 3
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      existingSecret:
        enabled: true
        secretName: nextcloud-mariadb
        usernameKey: mariadb-username
        passwordKey: mariadb-password
    # lifecycle:
    #   postStartCommand: ["/bin/bash", "-c", "(cd /autoconfig; bash setup.sh)"]
    cronjob:
      enabled: true
    persistence:
      enabled: true
      size: 4Gi
      accessMode: ReadWriteMany
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    redis:
      enabled: true
      auth:
        enabled: true
        existingSecret: nextcloud-redis
        existingSecretPasswordKey: password
      master:
        persistence:
          size: 4Gi
    mariadb:
      enabled: true
      auth:
        existingSecret: nextcloud-mariadb
      primary:
        persistence:
          enabled: true
          size: 4Gi
