apiVersion: v1
kind: Secret
metadata:
  name: longhorn-encryption
  namespace: longhorn-system
data:
  CRYPTO_KEY_VALUE: {{ include "common.secrets.passwords.manage" (dict "secret" "longhorn-encryption" "key" "CRYPTO_KEY_VALUE" "providedValues" (list "") "length" 16 "context" $) }}
  CRYPTO_KEY_PROVIDER: {{ "secret" | b64enc }}
  CRYPTO_KEY_CIPHER: {{ "aes-xts-plain64" | b64enc }}
  CRYPTO_KEY_HASH: {{ "sha256" | b64enc }}
  CRYPTO_KEY_SIZE: {{ "256" | b64enc }}
  CRYPTO_PBKDF: {{ "argon2i" | b64enc }}
---
{{- if not .Values.bootstrap }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: single
  {{- if and (not .Values.default_class.ha) (not .Values.default_class.encrypted) }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: "1"
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: single-enc
  {{- if and (not .Values.default_class.ha) .Values.default_class.encrypted }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: "1"
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ha
  {{- if and .Values.default_class.ha (not .Values.default_class.encrypted) }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: {{ .Values.default_ha_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ha-enc
  {{- if and .Values.default_class.ha .Values.default_class.encrypted }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: {{ .Values.default_ha_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: "1"
  dataLocality: strict-local
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-enc
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: "1"
  dataLocality: strict-local
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ha-backbone
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ printf "backbone.%s" .Values.cluster_name }}
  numberOfReplicas: {{ .Values.default_ha_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ha-backbone-enc
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ printf "backbone.%s" .Values.cluster_name }}
  numberOfReplicas: {{ .Values.default_ha_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
{{- range $zone := .Values.zones }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ printf "ha-zone-%s" $zone }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ printf "%s.%s" $zone $.Values.cluster_name }}
  numberOfReplicas: {{ $.Values.default_ha_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ printf "ha-zone-%s-enc" $zone }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ printf "%s.%s" $zone $.Values.cluster_name }}
  numberOfReplicas: {{ $.Values.default_ha_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
{{- end }}
{{- end }}
