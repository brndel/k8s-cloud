{{- if not .Values.vcluster }}
# VCluster storage classes are synced to host, where they reference the
# already existing storage secret.
apiVersion: v1
kind: Secret
metadata:
  name: longhorn-encryption
  namespace: longhorn-system
data:
  CRYPTO_KEY_VALUE: {{ include "common.secrets.passwords.manage" (dict "secret" "longhorn-encryption" "key" "CRYPTO_KEY_VALUE" "providedValues" (list "") "length" 16 "context" $) }}
  CRYPTO_KEY_PROVIDER: {{ "secret" | b64enc }}
  CRYPTO_KEY_CIPHER: {{ "aes-xts-plain64" | b64enc }}
  CRYPTO_KEY_HASH: {{ "sha256" | b64enc }}
  CRYPTO_KEY_SIZE: {{ "256" | b64enc }}
  CRYPTO_PBKDF: {{ "argon2i" | b64enc }}
---
{{- end }}
{{- if not .Values.bootstrap }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: "1"
  dataLocality: strict-local
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-enc
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ .Values.cluster_name }}
  numberOfReplicas: "1"
  dataLocality: strict-local
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: backbone
  {{- if not .Values.encrypt_default }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ printf "backbone.%s" .Values.cluster_name }}
  numberOfReplicas: {{ .Values.backbone_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: backbone-enc
  {{- if .Values.encrypt_default }}
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
  {{- end }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ printf "backbone.%s" .Values.cluster_name }}
  numberOfReplicas: {{ .Values.backbone_replicas | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
{{- range $zone, $spec := .Values.zones }}
{{ $selector := printf ($spec.backbone_only | ternary "backbone.%s.%s" "%s.%s") $.Values.cluster_name $zone }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ printf "zone-%s" $zone }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ $selector }}
  numberOfReplicas: {{ $spec.replicas | default 2 | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ printf "zone-%s-enc" $zone }}
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  nodeSelector: {{ $selector }}
  numberOfReplicas: {{ $spec.replicas | default 2 | quote }}
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
---
{{- end }}
{{- end }}
