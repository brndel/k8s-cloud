kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: longhorn-cluster
  annotations:
    "storageclass.kubernetes.io/is-default-class": "true"
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  {{- if .Values.selector }}
  nodeSelector: {{ .Values.cluster_name }}
  {{- end }}
  numberOfReplicas: "2"
  dataLocality: best-effort
  staleReplicaTimeout: "2880" # 48 hours in minutes
  fromBackup: ""

{{- if .Values.encryption }}

  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: longhorn-cluster-encryption
  csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-publish-secret-name: longhorn-cluster-encryption
  csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
  csi.storage.k8s.io/node-stage-secret-name: longhorn-cluster-encryption
  csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system

{{- if not .Values.vcluster }}
# VCluster storage class is synced to host, where it references the
# already existing storage secrets of the equally-named class.
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret_name }}
  namespace: longhorn-system
data:
  CRYPTO_KEY_VALUE: {{ include "common.secrets.passwords.manage" (dict "secret" $secret_name "key" "CRYPTO_KEY_VALUE" "providedValues" (list "") "length" 16 "context" $) }}
  CRYPTO_KEY_PROVIDER: {{ "secret" | b64enc }}
  CRYPTO_KEY_CIPHER: {{ "aes-xts-plain64" | b64enc }}
  CRYPTO_KEY_HASH: {{ "sha256" | b64enc }}
  CRYPTO_KEY_SIZE: {{ "256" | b64enc }}
  CRYPTO_PBKDF: {{ "argon2i" | b64enc }}
{{- end }}

{{- end }}
