apiVersion: v1
kind: Secret
metadata:
  name: sso-keycloak
type: Opaque
data:
  {{- $passRef := .Values.keycloak.password_secret }}
  password: {{ get ((lookup "v1" "Secret" (default .Release.Namespace $passRef.namespace) $passRef.name).data) $passRef.key }}
{{- if .Values.oidc.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- $client_secret := .Values.oidc.secret_name | ternary .Values.oidc.secret_name (printf "oidc-client.%s" .Values.oidc.id) }}
  name: {{ $client_secret }}
type: Opaque
data:
  secret: {{ include "common.secrets.passwords.manage" (dict "secret" $client_secret "key" "secret" "providedValues" (list "") "length" 16 "context" $) }}
{{- end }}
{{- if .Values.saml.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- $client_secret := .Values.saml.secret_name | ternary .Values.saml.secret_name (printf "saml-client.%s" .Values.saml.id) }}
  name: {{ $client_secret }}
type: kubernetes.io/tls
data:
  {{- $cert := dict "tls.crt" "" "tls.key" "" -}}

  {{- if not (include "common.secrets.exists" (dict "secret" $client_secret "context" $)) -}}
  {{- $gen_cert := genSelfSignedCert .Values.saml.cert_domain nil nil 3650 -}}
  {{- set $cert "tls.crt" ($gen_cert.Cert | replace "\n" "" | trimPrefix "-----BEGIN CERTIFICATE-----" | trimSuffix "-----END CERTIFICATE-----" | b64enc) -}}
  {{- set $cert "tls.key" ($gen_cert.Key | replace "\n" "" | trimPrefix "-----BEGIN RSA PRIVATE KEY-----" | trimSuffix "-----END RSA PRIVATE KEY-----" | b64enc) -}}
  {{- else -}}
  {{- $cert = (lookup "v1" "Secret" .Release.Namespace $client_secret).data -}}
  {{- end -}}

  tls.crt: {{ get $cert "tls.crt" }}
  tls.key: {{ get $cert "tls.key" }}
{{- end }}
