# Default values, copy to ./<CLUSTER_NAME>.config.yaml before making changes.
# Do not forget to also copy and fill out ./secrets.yaml!

# Required. Root domain, on which the cluster is to run.
domain: ""

# Required. SMTP config for notification emails.
smtp:
  host: ""
  port: ""
  user: ""
  from_address: ""
  # Put the password in ./<CLUSTER_NAME>.secrets.yaml

# Required. S3 config for logs and backups storage.
s3:
  endpoint: "" # Full URL of your S3 endpoint (minus credentials)
  region: "eu-central-1" # Required by Longhorn, just leave the default if you don't have zones
  access_key_id: "" # Your S3 access key id
  # Put the access key secret in ./<CLUSTER_NAME>.secrets.yaml

# Required. Bucket names for logs and backups storage (have to be created manually in advance).
s3_buckets:
  backup: ""
  logs: ""

# Required. Email of initial admin accounts (for login and notifications).
admin_email: ""

# Information about the organization running the cluster
org:
   # Required. Name of your organization.
  name: ""
  default_locale: "en_US"
  tagline: ""
  logo_url: ""

# Configure this cluster to be restored from an existing cluster backup.
cluster_restoration:
  # Set to true to enable restoring.
  restore: false
  # The unique name of the Velero schedule
  # to restore from. If specified, and backup_name is empty, Velero will
  # restore from the most recent successful backup created from this schedule.
  schedule_name: cluster-backup
  # The unique name of the Velero backup to restore from.
  backup_name: ""

# Set to true to create a vcluster on top of a k3s host cluster
vcluster: false

# Subdomains created and managed by this cluster.
subdomains:
  k8s_api: "k8s"
  keycloak: "id"
  oauth2_proxy: "oauth"
  k8s_dashboard: "kubectl"
  weave_gitops: "gitops"
  grafana: "grafana"
  longhorn: "longhorn"

# Auto-trust unknown ssh-hosts.
auto_trust_remotes: false

# Clear inventory hosts from ssh known_hosts before running setup.
clear_known_hosts: false

# Provision SSL certificates from letsencrypt-staging instead of production (to avoid API rate-limiting)
letsencrypt_staging: false

# Git repo to connect to for infrastructure updates via gitops.
base_repo: https://github.com/cloudlane-one/k8s-cloud
# Branch of repo to poll for updates.
base_branch: main

# Linux user to use for running setup on remote hosts (needs sudo privileges).
ansible_user: root
