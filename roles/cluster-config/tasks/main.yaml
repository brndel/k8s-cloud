- name: Retrieve given host roles
  ansible.builtin.set_fact:
    backbone_hosts: "{{ hostvars | dict2items | selectattr('value.backbone', 'defined') | selectattr('value.backbone') | map(attribute='key') }}"
    control_hosts: "{{ hostvars | dict2items | selectattr('value.control', 'defined') | selectattr('value.control') | map(attribute='key') }}"
    ingress_hosts: "{{ hostvars | dict2items | selectattr('value.ingress', 'defined') | selectattr('value.ingress') | map(attribute='key') }}"
    storage_hosts: "{{ hostvars | dict2items | selectattr('value.storage', 'defined') | selectattr('value.storage') | map(attribute='key') }}"

- name: Set host roles to default, if not customized
  vars:
    tru_bb_nodes: "{{ hostvars | dict2items | selectattr('value.backbone', 'defined') | selectattr('value.backbone', '!=', false) | map(attribute='key') }}"
    default_backbone_hosts: "{{ hostvars | dict2items | selectattr('value.backbone', 'undefined') | map(attribute='key') | union(tru_bb_nodes) }}"
    first_backbone_node: "{{ backbone_hosts | default(default_backbone_hosts) | first }}"
    tru_strg_nodes: "{{ hostvars | dict2items | selectattr('value.storage', 'defined') | selectattr('value.storage', '!=', false) | map(attribute='key') }}"
    default_storage_hosts: "{{ hostvars | dict2items | selectattr('value.storage', 'undefined') | map(attribute='key') | union(tru_strg_nodes) }}"
  ansible.builtin.set_fact:
    backbone_hosts: "{{ backbone_hosts if backbone_hosts | length > 0 else default_backbone_hosts }}"
    control_hosts: "{{ control_hosts if control_hosts | length > 0 else [first_backbone_node] }}"
    ingress_hosts: "{{ ingress_hosts if ingress_hosts | length > 0 else [first_backbone_node] }}"
    storage_hosts: "{{ storage_hosts if storage_hosts | length > 0 else default_storage_hosts }}"

- name: Add host to backbone_hosts group
  loop: "{{ backbone_hosts }}"
  ansible.builtin.add_host:
    name: "{{ item }}"
    groups: backbone

- name: Add host to control_hosts group
  loop: "{{ control_hosts }}"
  ansible.builtin.add_host:
    name: "{{ item }}"
    groups: control

- name: Add host to ingress_hosts group
  loop: "{{ ingress_hosts }}"
  ansible.builtin.add_host:
    name: "{{ item }}"
    groups: ingress

- name: Add host to storage_hosts group
  loop: "{{ storage_hosts }}"
  ansible.builtin.add_host:
    name: "{{ item }}"
    groups: storage

- name: Load default config values
  ansible.builtin.include_vars:
    file: configmap.yaml
    name: default_config

- name: Merge custom with default config
  ansible.builtin.set_fact:
    cluster: "{{ default_config.cluster | combine(cluster, recursive=true) }}"
